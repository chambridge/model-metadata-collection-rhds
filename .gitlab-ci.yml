stages:
  - metadata-extraction

variables:
  GO_VERSION: "1.24"
  MODELS_CATALOG_PATH: "data/models-catalog.yaml"

model-metadata-extraction:
  stage: metadata-extraction
  image: golang:${GO_VERSION}
  
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  
  before_script:
    - apt-get update -qq && apt-get install -y -qq git make podman curl jq
    - git config --global user.name "Model Metadata Bot"
    - git config --global user.email "model-metadata-bot@redhat.com"
    - go version && make deps
    - echo "$REDHAT_REGISTRY_SERVICE_ACCOUNT_TOKEN" | podman login registry.redhat.io --username "$REDHAT_REGISTRY_SERVICE_ACCOUNT_NAME" --password-stdin
  
  script:
    - make run && test -f "$MODELS_CATALOG_PATH" || exit 1
    - git add "$MODELS_CATALOG_PATH" && git diff --cached --quiet "$MODELS_CATALOG_PATH" && echo "No changes detected in models catalog" && exit 0
    - TIMESTAMP=$(date +%s) && BRANCH_NAME="models-catalog-${TIMESTAMP}"
    - OLD_COUNT=$(git show HEAD:"$MODELS_CATALOG_PATH" 2>/dev/null | grep -c '^ *- name:' | tr -d '\n' || echo "0") && NEW_COUNT=$(grep -c '^ *- name:' "$MODELS_CATALOG_PATH" 2>/dev/null | tr -d '\n' || echo "0")
    - 'if [ "$NEW_COUNT" -gt "$OLD_COUNT" ]; then CHANGE_DESC="Added models ($OLD_COUNT to $NEW_COUNT)"; elif [ "$NEW_COUNT" -lt "$OLD_COUNT" ]; then CHANGE_DESC="Removed models ($OLD_COUNT to $NEW_COUNT)"; else CHANGE_DESC="Updated model metadata"; fi'
    - git checkout -b "$BRANCH_NAME" && git add "$MODELS_CATALOG_PATH" && git commit -m "Update models catalog $CHANGE_DESC ($OLD_COUNT -> $NEW_COUNT)"
    - test -n "$GITLAB_TOKEN" && git config --global http.sslVerify false && git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git" && git push -o ci.skip origin "$BRANCH_NAME" || exit 1
    - MR_TITLE="Update models catalog $CHANGE_DESC" && MR_DESC="Automated catalog update $OLD_COUNT to $NEW_COUNT models"
    - 'MR_RESPONSE=$(curl -k -X POST -H "PRIVATE-TOKEN: $GITLAB_TOKEN" -H "Content-Type: application/json" -d "{\"source_branch\":\"$BRANCH_NAME\",\"target_branch\":\"$CI_DEFAULT_BRANCH\",\"title\":\"$MR_TITLE\",\"description\":\"$MR_DESC\",\"remove_source_branch\":true,\"squash\":true}" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests" 2>&1) && echo "MR API Response: $MR_RESPONSE" || echo "MR creation failed: $MR_RESPONSE"'
  
  cache:
    key: go-modules-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/go-build/
      - .cache/go-mod/
  
  artifacts:
    name: "model-metadata-catalog-$CI_COMMIT_SHORT_SHA"
    paths:
      - data/models-catalog.yaml
      - data/models-index.yaml
      - data/hugging-face-*.yaml
      - output/
    expire_in: 1 week
  
  after_script:
    - MODEL_COUNT=$(grep -c '^ *- name:' "$MODELS_CATALOG_PATH" 2>/dev/null || echo 0)
    - echo "EXTRACTED_MODELS=$MODEL_COUNT" > metadata-report.env
    - echo "EXTRACTION_TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> metadata-report.env
  
  tags:
    - shared-podman
  
  timeout: 2h